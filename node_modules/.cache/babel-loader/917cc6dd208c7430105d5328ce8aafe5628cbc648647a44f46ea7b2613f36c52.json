{"ast":null,"code":"var _jsxFileName = \"D:\\\\movie_app_react\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport './App.css';\nimport SearchIcon from './search.svg';\nimport MovieCard from './MovieCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst API_URL = 'http://www.omdbapi.com?apikey=12b784d';\nconst movie1 = {\n  \"Title\": \"The Amazing Spiderman 2 Webb Cut\",\n  \"Year\": \"2021\",\n  \"imdbID\": \"tt18351128\",\n  \"Type\": \"movie\",\n  \"Poster\": \"https://m.media-amazon.com/images/M/MV5BYzYzZDViNWYtNWViMS00NDMxLThlN2YtZjFkOWMwODkzNzhiXkEyXkFqcGdeQXVyMTUwMzM4NzU0._V1_SX300.jpg\"\n};\nconst App = () => {\n  _s();\n  const [movies, setMovies] = useState([]);\n  const [searchTerm, setSearchTerm] = useState('');\n  const searchMovies = async title => {\n    const response = await fetch(`${API_URL}&s=${title}`);\n    const data = await response.json();\n    setMovies(data.Search);\n  };\n  useEffect(() => {\n    searchMovies('SpiderMan');\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"FilmCity\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"Search for Movies\",\n          value: searchTerm,\n          onChange: () => setService(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: SearchIcon,\n          alt: \"search\",\n          onClick: () => {}\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }, this), (movies === null || movies === void 0 ? void 0 : movies.length) > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: movies.map(movie => /*#__PURE__*/_jsxDEV(MovieCard, {\n          movie: movie\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"empty\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"No movies found\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n_s(App, \"nmGuk4IsUa4415BYG0nQ+6CoHIo=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","SearchIcon","MovieCard","jsxDEV","_jsxDEV","Fragment","_Fragment","API_URL","movie1","App","_s","movies","setMovies","searchTerm","setSearchTerm","searchMovies","title","response","fetch","data","json","Search","children","className","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","value","onChange","setService","e","target","src","alt","onClick","length","map","movie","_c","$RefreshReg$"],"sources":["D:/movie_app_react/src/App.js"],"sourcesContent":["import {useEffect, useState} from 'react';\r\n\r\nimport './App.css';\r\nimport SearchIcon from './search.svg';\r\n\r\nimport MovieCard from './MovieCard';\r\n\r\nconst API_URL = 'http://www.omdbapi.com?apikey=12b784d';\r\n\r\nconst movie1 = {\r\n    \"Title\": \"The Amazing Spiderman 2 Webb Cut\",\r\n    \"Year\": \"2021\",\r\n    \"imdbID\": \"tt18351128\",\r\n    \"Type\": \"movie\",\r\n    \"Poster\": \"https://m.media-amazon.com/images/M/MV5BYzYzZDViNWYtNWViMS00NDMxLThlN2YtZjFkOWMwODkzNzhiXkEyXkFqcGdeQXVyMTUwMzM4NzU0._V1_SX300.jpg\"\r\n}\r\n\r\nconst App = () => {\r\n\r\n    const [movies, setMovies] = useState([]);\r\n    const [searchTerm, setSearchTerm] = useState('');\r\n\r\n    const searchMovies = async(title)=> {\r\n        const response = await fetch(`${API_URL}&s=${title}`);\r\n        const data = await response.json();\r\n\r\n        setMovies(data.Search);\r\n    }\r\n    \r\n    useEffect(()=> {\r\n        searchMovies('SpiderMan');\r\n    }, []);\r\n\r\n    return(\r\n        <>\r\n        <div className='app'>\r\n            <h1>FilmCity</h1>\r\n\r\n            <div className='search'>\r\n                <input\r\n                placeholder='Search for Movies'\r\n                value={searchTerm}\r\n                onChange={()=> setService(e.target.value)}\r\n                />\r\n                <img\r\n                src={SearchIcon}\r\n                alt='search'\r\n                onClick={()=> {}}\r\n                />\r\n            </div>\r\n\r\n\r\n            {\r\n                movies?.length > 0\r\n                ? (\r\n                    <div className='container'>\r\n                     {movies.map((movie)=> (\r\n                        <MovieCard movie={movie}/>\r\n                     ))}\r\n                    </div>\r\n                ) :\r\n                (\r\n                    <div className='empty'>\r\n                        <h2>No movies found</h2>\r\n                    </div>\r\n                )\r\n            }\r\n\r\n        </div>\r\n        </>\r\n    );\r\n}\r\n\r\n\r\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}